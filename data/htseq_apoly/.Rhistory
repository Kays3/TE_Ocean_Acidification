contrast_results <- lfcShrink(dds, contrast_results)
# Store results in the results list
all_results[[sample_id]] <- contrast_results
}
# Loop through each sample's count file
for (sample_id in 1:72) {
# Read in the HTSeq count data for the current sample
count_filename <- paste("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7/sample_", sample_id, ".txt", sep="")
countData <- as.matrix(read.table(count_filename, header=TRUE, row.names=1))
# Extract condition and treatment info from the sample description
parental_phenotype <- sample_desc$parental_phenotype[sample_desc$NUMERIC == sample_id]
treatment <- sample_desc$treatment[sample_desc$NUMERIC == sample_id]
# Create a sample table with condition and treatment for the current sample
sampleTable <- data.frame(
parental_phenotype = factor(parental_phenotype),
treatment = factor(treatment)
)
}
View(countData)
table(DATA$parental_phenotype)
# Loop through each sample's count file
for (sample_id in 1:72) {
# Read in the HTSeq count data for the current sample
count_filename <- paste("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7/sample_", sample_id, ".txt", sep="")
countData <- as.matrix(read.table(count_filename, header=TRUE, row.names=1))
# Extract condition and treatment info from the sample description
parental_phenotype <- sample_desc$parental_phenotype[sample_desc$NUMERIC == sample_id]
treatment <- sample_desc$treatment[sample_desc$NUMERIC == sample_id]
# Create a sample table with condition and treatment for the current sample
sampleTable <- data.frame(
parental_phenotype = factor(parental_phenotype),
treatment = factor(treatment)
)
# Create a DESeqDataSet object for the current sample
dds <- DESeqDataSetFromMatrix(countData, colData=sampleTable, design=~parental_phenotype+treatment)
# Perform normalization and differential expression analysis
dds <- DESeq(dds)
# Extract results
results <- results(dds)
# Perform contrast analysis for parental_phenotype sensitive vs tolerant
contrast_results <- results(dds, contrast=c("parental_phenotype", "sensitive", "tolerant"))
# Adjust p-values for multiple testing
contrast_results <- lfcShrink(dds, contrast_results)
# Store results in the results list
all_results[[sample_id]] <- contrast_results
}
View(sampleTable)
View(sample_desc)
# Loop through each sample's count file
for (sample_id in 1:72) {
# Read in the HTSeq count data for the current sample
count_filename <- paste("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7/sample_", sample_id, ".txt", sep="")
countData <- as.matrix(read.table(count_filename, header=TRUE, row.names=1))
# Extract condition and treatment info from the sample description
parental_phenotype <- DATA$parental_phenotype[DATA$NUMERIC == sample_id]
treatment <- DATA$treatment[DATA$NUMERIC == sample_id]
# Create a sample table with condition and treatment for the current sample
sampleTable <- data.frame(
parental_phenotype = factor(parental_phenotype),
treatment = factor(treatment)
)
# Create a DESeqDataSet object for the current sample
dds <- DESeqDataSetFromMatrix(countData, colData=sampleTable, design=~parental_phenotype+treatment)
# Perform normalization and differential expression analysis
dds <- DESeq(dds)
# Extract results
results <- results(dds)
# Perform contrast analysis for parental_phenotype sensitive vs tolerant
contrast_results <- results(dds, contrast=c("parental_phenotype", "sensitive", "tolerant"))
# Adjust p-values for multiple testing
contrast_results <- lfcShrink(dds, contrast_results)
# Store results in the results list
all_results[[sample_id]] <- contrast_results
}
# Loop through each sample's count file
for (sample_id in 1:72) {
# Read in the HTSeq count data for the current sample
count_filename <- paste("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7/sample_", sample_id, ".txt", sep="")
countData <- as.matrix(read.table(count_filename, header=TRUE, row.names=1))
# Extract condition and treatment info from the sample description
parental_phenotype <- DATA$parental_phenotype[DATA$NUMERIC == sample_id]
treatment <- DATA$treatment[DATA$NUMERIC == sample_id]
# Create a sample table with condition and treatment for the current sample
sampleTable <- data.frame(
parental_phenotype = factor(parental_phenotype),
treatment = factor(treatment)
)
# Create a DESeqDataSet object for the current sample
dds <- DESeqDataSetFromMatrix(countData, colData=sampleTable, design=~parental_phenotype:treatment)
# Perform normalization and differential expression analysis
dds <- DESeq(dds)
# Extract results
results <- results(dds)
# Perform contrast analysis for parental_phenotype sensitive vs tolerant
contrast_results <- results(dds, contrast=c("parental_phenotype", "sensitive", "tolerant"))
# Adjust p-values for multiple testing
contrast_results <- lfcShrink(dds, contrast_results)
# Store results in the results list
all_results[[sample_id]] <- contrast_results
}
# Loop through each sample's count file
for (sample_id in 1:72) {
# Read in the HTSeq count data for the current sample
count_filename <- paste("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7/sample_", sample_id, ".txt", sep="")
countData <- as.matrix(read.table(count_filename, header=TRUE, row.names=1))
# Extract condition and treatment info from the sample description
parental_phenotype <- DATA$parental_phenotype[DATA$NUMERIC == sample_id]
treatment <- DATA$treatment[DATA$NUMERIC == sample_id]
# Create a sample table with condition and treatment for the current sample
sampleTable <- data.frame(
parental_phenotype = factor(parental_phenotype),
treatment = factor(treatment)
)
countData<-cbind(countData[sample_id])
}
# Loop through each sample's count file
for (sample_id in 1:72) {
# Read in the HTSeq count data for the current sample
count_filename <- paste("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7/sample_", sample_id, ".txt", sep="")
countData <- as.matrix(read.table(count_filename, header=TRUE, row.names=1))
# Extract condition and treatment info from the sample description
parental_phenotype <- DATA$parental_phenotype[DATA$NUMERIC == sample_id]
treatment <- DATA$treatment[DATA$NUMERIC == sample_id]
# Create a sample table with condition and treatment for the current sample
sampleTable <- data.frame(
parental_phenotype = factor(parental_phenotype),
treatment = factor(treatment)
)
countData<-cbind(countData[sample_id])
}
rm(list=ls())
# Read in the sample description file
sample_desc <- read.table("/Users/kaisar_dauyey/Desktop/TE_results/march2023/DEG_2023/Apoly_CO2_samplesheet.2021.txt", header=TRUE, sep="\t")
NAMES = gsub("Aligned.sortedByCoord.out.counts.txt","", grep(".txt", dir(), value=TRUE))
DATA=data.frame("file"=NAMES,sample=substr(NAMES,1,6),stringsAsFactors=FALSE)
DATA$NUMERIC <-c(1:72)
colnames(DATA)[1]<-"RNAseq.fastq"
colnames(DATA)[2]<-"sample_Mirko"
DATA = merge(DATA,sample_desc, merge="RNAseq.fastq", all.x=TRUE)
DATA$"rep" = substr(DATA$"RNAseq.fastq",7,7)
DATA$"Treat_pheno" =paste(DATA$"treatment",DATA$"parental_phenotype",sep="_")
table(DATA$parental_phenotype)
View(DATA)
View(DATA)
setwd("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy//")
NAMES = gsub("Aligned.sortedByCoord.out.counts.txt","", grep(".txt", dir(), value=TRUE))
DATA=data.frame("file"=NAMES,sample=substr(NAMES,1,6),stringsAsFactors=FALSE)
DATA$NUMERIC <-c(1:72)
colnames(DATA)[1]<-"RNAseq.fastq"
colnames(DATA)[2]<-"sample_Mirko"
DATA = merge(DATA,sample_desc, merge="RNAseq.fastq", all.x=TRUE)
DATA$"rep" = substr(DATA$"RNAseq.fastq",7,7)
DATA$"Treat_pheno" =paste(DATA$"treatment",DATA$"parental_phenotype",sep="_")
table(DATA$parental_phenotype)
?factor
rm(list=ls())
#rm(list=ls())
#-- provide directory with htseq-count output files
dir = ("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy/")
#-- define the pattern of files to be analysed, the file shold end as _HtSeqCount.txt
pattern="*Aligned.sortedByCoord.out.counts.txt"
#-- provide metadata file containg file names and their the replicate information as below
metadata_file <- "/Users/kaisar_dauyey/Desktop/TE_results/march2023/DEG_2023/Apoly_CO2_samplesheet.2021.txt"
rm(list=ls())
phdata<-data.frame(fname=list.files(path=datadir,pattern="*Aligned.sortedByCoord.out.counts.txt"),stringsAsFactors=FALSE)
datadir<-"/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy"
phdata<-data.frame(fname=list.files(path=datadir,pattern="*Aligned.sortedByCoord.out.counts.txt"),stringsAsFactors=FALSE)
head(phdata)
dim(phdata)
phdata <- phdata %>% transmute(sample=substr(fname,1,7),fname)
# August 12, 2023
# Author KD
library(DESeq2)
library(tools)
library(limma)
library(qvalue)
library(dplyr)
options(width=100)
phdata <- phdata %>% transmute(sample=substr(fname,1,7),fname)
head(phdata)
# Read in the sample description file
sample_desc <- read.table("/Users/kaisar_dauyey/Desktop/TE_results/march2023/DEG_2023/Apoly_CO2_samplesheet.2021.txt", header=TRUE, sep="\t")
NAMES = gsub("Aligned.sortedByCoord.out.counts.txt","", grep(".txt", dir(), value=TRUE))
DATA=data.frame("file"=NAMES,sample=substr(NAMES,1,6),stringsAsFactors=FALSE)
View(phdata)
DATA$NUMERIC <-c(1:72)
colnames(DATA)[1]<-"RNAseq.fastq"
colnames(DATA)[2]<-"sample_Mirko"
DATA = merge(DATA,sample_desc, merge="RNAseq.fastq", all.x=TRUE)
DATA$"rep" = substr(DATA$"RNAseq.fastq",7,7)
DATA$"Treat_pheno" =paste(DATA$"treatment",DATA$"parental_phenotype",sep="_")
View(DATA)
minidata<-as.data.frame(cbind(DATA$RNAseq.fastq,DATA$treatment,DATA$parental_phenotype))
View(minidata)
View(phdata)
colnames(minidata)<-c("sample","treatment","parental_phenotype")
phdata1<-merge(phdata,minidata, merge="sample", all.x=TRUE)
View(phdata1)
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=substras.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=as.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
head(phdata1)
View(phdata1)
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata,directory=datadir,design=~ treatment:parental_phenotype)
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=~ treatment:parental_phenotype)
View(phdata1)
View(sample_desc)
table(sample_desc)
table(sample_desc$other_info)
View(sample_desc)
View(sample_desc)
View(phdata1)
rm(list=ls())
datadir<-"/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy"
phdata<-data.frame(fname=list.files(path=datadir,pattern="*Aligned.sortedByCoord.out.counts.txt"),stringsAsFactors=FALSE)
head(phdata)
dim(phdata)
phdata <- phdata %>% transmute(sample=substr(fname,1,7),fname)
head(phdata)
getwd()
setwd("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy//")
# Read in the sample description file
sample_desc <- read.table("/Users/kaisar_dauyey/Desktop/TE_results/march2023/DEG_2023/Apoly_CO2_samplesheet.2021.txt", header=TRUE, sep="\t")
sample_desc <- sample_desc[-123, -128, -216, -217]
sample_desc <- sample_desc[-c(123, 128, 216, 217),]
NAMES = gsub("Aligned.sortedByCoord.out.counts.txt","", grep(".txt", dir(), value=TRUE))
DATA=data.frame("file"=NAMES,sample=substr(NAMES,1,6),stringsAsFactors=FALSE)
DATA$NUMERIC <-c(1:72)
colnames(DATA)[1]<-"RNAseq.fastq"
colnames(DATA)[2]<-"sample_Mirko"
DATA = merge(DATA,sample_desc, merge="RNAseq.fastq", all.x=TRUE)
DATA$"rep" = substr(DATA$"RNAseq.fastq",7,7)
DATA$"Treat_pheno" =paste(DATA$"treatment",DATA$"parental_phenotype",sep="_")
minidata<-as.data.frame(cbind(DATA$RNAseq.fastq,DATA$treatment,DATA$parental_phenotype))
colnames(minidata)<-c("sample","treatment","parental_phenotype")
phdata1<-merge(phdata,minidata, merge="sample", all.x=TRUE)
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=as.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
head(phdata1)
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=~ treatment:parental_phenotype)
View(phdata1)
View(sample_desc)
phdata1$treatment[64]
phdata1$treatment[54]
phdata1$treatment[54] == "control"
phdata1$treatment[54] <- "control"
phdata1$parental_phenotype[54]<-"tolerant"
#make dds object
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=~ treatment:parental_phenotype)
#make dds object
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=~treatment + treatment:parental_phenotype)
dds
slotNames(dds)
dds@design
dim(counts(dds))
head(counts(dds),3)
dds <- estimateSizeFactors(dds)
sizeFactors(dds)
#limit the size factors
round(sizeFactors(dds),3)
head(counts(dds),3)
head(counts(dds,normalize=TRUE),3)
dds<-estimateDispersions(dds)
ddsDE<-DESeq(dds)
resultsNames(dds)
resultsNames(ddsDE)
phdata_tol<- phdata1 %>% filter(parental_phenotype=="tolerant")
phdata_sens<- phdata1 %>% filter(parental_phenotype=="sensitive")
#make dds object watch out for full rank model matrix
dds_tol<-DESeqDataSetFromHTSeqCount(sampleTable=phdata_tol,directory=datadir,design=~treatment)
View(phdata_tol)
phdata1$treatment <- relevel(phdata1$treatment, "control")
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=as.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
head(phdata1)
phdata1$treatment <- relevel(phdata1$treatment, "control")
phdata1$treatment[54] <- "control"
phdata1$parental_phenotype[54]<-"tolerant"
phdata_tol<- phdata1 %>% filter(parental_phenotype=="tolerant")
phdata_sens<- phdata1 %>% filter(parental_phenotype=="sensitive")
#make dds object watch out for full rank model matrix
dds_tol<-DESeqDataSetFromHTSeqCount(sampleTable=phdata_tol,directory=datadir,design=~treatment)
dds_tol
dds_tol@design
dim(counts(dds_tol))
head(counts(dds_tol),3)
dds_tol <- estimateSizeFactors(dds_tol)
sizeFactors(dds_tol)
#limit the size factors
round(sizeFactors(dds_tol),3)
head(counts(dds_tol),3)
head(counts(dds_tol,normalize=TRUE),3)
dds_tol<-estimateDispersions(dds_tol)
ddsDE_tol<-DESeq(dds_tol)
resultsNames(ddsDE_tol)
#DGE
design(dds_tol) <- ~0 + treatment
ddsDE_tol_new<-DESeq(dds_tol)
resultsNames(ddsDE_tol)
resultsNames(ddsDE_tol_new)
res2 <- results(ddsDE_tol_new, contrast=c(1,-1,0,0))
resultsNames(res2)
res2 <- results(ddsDE_tol_new, contrast=c(0,-1,0,0))
resultsNames(res2)
res2 <- results(ddsDE_tol_new, contrast=c(1,-1,1,-1))
resultsNames(res2)
View(res2)
resultsNames(ddsDE_tol)
res2 <- results(ddsDE_tol, contrast=c("treatment","acute","transgenerational"))
resultsNames(res2)
res2
res2 <- results(ddsDE_tol, contrast=c("treatment","control","transgenerational"))
res1 <- results(ddsDE_tol, contrast=c("treatment","control","transgenerational"))
res1
res2
rm(list=ls())
datadir<-"/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy"
phdata<-data.frame(fname=list.files(path=datadir,pattern="*Aligned.sortedByCoord.out.counts.txt"),stringsAsFactors=FALSE)
head(phdata)
dim(phdata)
phdata <- phdata %>% transmute(sample=substr(fname,1,7),fname)
head(phdata)
getwd()
setwd("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy//")
# Read in the sample description file
sample_desc <- read.table("/Users/kaisar_dauyey/Desktop/TE_results/march2023/DEG_2023/Apoly_CO2_samplesheet.2021.txt", header=TRUE, sep="\t")
sample_desc <- sample_desc[-c(123, 128, 216, 217),]
NAMES = gsub("Aligned.sortedByCoord.out.counts.txt","", grep(".txt", dir(), value=TRUE))
DATA=data.frame("file"=NAMES,sample=substr(NAMES,1,6),stringsAsFactors=FALSE)
DATA$NUMERIC <-c(1:72)
colnames(DATA)[1]<-"RNAseq.fastq"
colnames(DATA)[2]<-"sample_Mirko"
DATA = merge(DATA,sample_desc, merge="RNAseq.fastq", all.x=TRUE)
DATA$"rep" = substr(DATA$"RNAseq.fastq",7,7)
DATA$"Treat_pheno" =paste(DATA$"treatment",DATA$"parental_phenotype",sep="_")
minidata<-as.data.frame(cbind(DATA$RNAseq.fastq,DATA$treatment,DATA$parental_phenotype))
colnames(minidata)<-c("sample","treatment","parental_phenotype")
phdata1<-merge(phdata,minidata, merge="sample", all.x=TRUE)
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=as.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
head(phdata1)
phdata1$treatment <- relevel(phdata1$treatment, "control")
phdata1$treatment[54] <- "control"
phdata1$parental_phenotype[54]<-"tolerant"
phdata_tol<- phdata1 %>% filter(parental_phenotype=="tolerant")
#make dds object watch out for full rank model matrix
dds_tol<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=~treatment)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=~treatment)
dds_tol<-dds
slotNames(dds_tol)
dds_tol@design
dim(counts(dds_tol))
head(counts(dds_tol),3)
dds_tol <- estimateSizeFactors(dds_tol)
sizeFactors(dds_tol)
#limit the size factors
round(sizeFactors(dds_tol),3)
head(counts(dds_tol),3)
head(counts(dds_tol,normalize=TRUE),3)
dds_tol<-estimateDispersions(dds_tol)
ddsDE_tol<-DESeq(dds_tol)
res1 <- results(ddsDE_tol, contrast=c("treatment","control","transgenerational"))
res1[1:4,]
summary(res1,0.05)
res1[order(res1[["pvalue"]])[1:4],]
#ddsDE_tol_new<-DESeq(dds_tol)
resultsNames(ddsDE_tol)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=~treatment*parental_phenotype)
dds_tol<-dds
slotNames(dds_tol)
dds_tol@design
dim(counts(dds_tol))
head(counts(dds_tol),3)
dds_tol <- estimateSizeFactors(dds_tol)
sizeFactors(dds_tol)
#limit the size factors
round(sizeFactors(dds_tol),3)
head(counts(dds_tol),3)
head(counts(dds_tol,normalize=TRUE),3)
dds_tol<-estimateDispersions(dds_tol)
ddsDE_tol<-DESeq(dds_tol)
#ddsDE_tol_new<-DESeq(dds_tol)
resultsNames(ddsDE_tol)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=1 + treatment + parental_phenotype + treatment:parental_phenotype)
rm(list=ls())
datadir<-"/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy"
phdata<-data.frame(fname=list.files(path=datadir,pattern="*Aligned.sortedByCoord.out.counts.txt"),stringsAsFactors=FALSE)
head(phdata)
dim(phdata)
phdata <- phdata %>% transmute(sample=substr(fname,1,7),fname)
head(phdata)
getwd()
setwd("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy//")
# Read in the sample description file
sample_desc <- read.table("/Users/kaisar_dauyey/Desktop/TE_results/march2023/DEG_2023/Apoly_CO2_samplesheet.2021.txt", header=TRUE, sep="\t")
sample_desc <- sample_desc[-c(123, 128, 216, 217),]
NAMES = gsub("Aligned.sortedByCoord.out.counts.txt","", grep(".txt", dir(), value=TRUE))
DATA=data.frame("file"=NAMES,sample=substr(NAMES,1,6),stringsAsFactors=FALSE)
DATA$NUMERIC <-c(1:72)
colnames(DATA)[1]<-"RNAseq.fastq"
colnames(DATA)[2]<-"sample_Mirko"
DATA = merge(DATA,sample_desc, merge="RNAseq.fastq", all.x=TRUE)
DATA$"rep" = substr(DATA$"RNAseq.fastq",7,7)
DATA$"Treat_pheno" =paste(DATA$"treatment",DATA$"parental_phenotype",sep="_")
minidata<-as.data.frame(cbind(DATA$RNAseq.fastq,DATA$treatment,DATA$parental_phenotype))
colnames(minidata)<-c("sample","treatment","parental_phenotype")
phdata1<-merge(phdata,minidata, merge="sample", all.x=TRUE)
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=as.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
head(phdata1)
phdata1$treatment <- relevel(phdata1$treatment, "control")
View(phdata1)
phdata1$treatment[54] <- "control"
phdata1$parental_phenotype[54]<-"tolerant"
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=1 + treatment + parental_phenotype + treatment:parental_phenotype)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design= 1 + treatment + parental_phenotype + treatment:parental_phenotype)
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=as.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
head(phdata1)
phdata1$treatment[54] <- "control"
phdata1$parental_phenotype[54]<-"tolerant"
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design= 1 + treatment + parental_phenotype + treatment:parental_phenotype)
colData(dds)
View(phdata1)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design= 1  + parental_phenotype +treatment + treatment:parental_phenotype)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design=parental_phenotype +treatment + treatment:parental_phenotype)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design= ~ parental_phenotype +treatment + treatment:parental_phenotype)
colData(dds)
resultsNames(dds)
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design= ~ 1 + parental_phenotype +treatment + treatment:parental_phenotype)
colData(dds)
resultsNames(dds)
rm(list=ls())
datadir<-"/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy"
phdata<-data.frame(fname=list.files(path=datadir,pattern="*Aligned.sortedByCoord.out.counts.txt"),stringsAsFactors=FALSE)
head(phdata)
dim(phdata)
phdata <- phdata %>% transmute(sample=substr(fname,1,7),fname)
head(phdata)
getwd()
setwd("/Users/kaisar_dauyey/Desktop/TE_results/august2023/htseq_apoly_aug7_original_copy//")
# Read in the sample description file
sample_desc <- read.table("/Users/kaisar_dauyey/Desktop/TE_results/march2023/DEG_2023/Apoly_CO2_samplesheet.2021.txt", header=TRUE, sep="\t")
sample_desc <- sample_desc[-c(123, 128, 216, 217),]
NAMES = gsub("Aligned.sortedByCoord.out.counts.txt","", grep(".txt", dir(), value=TRUE))
DATA=data.frame("file"=NAMES,sample=substr(NAMES,1,6),stringsAsFactors=FALSE)
DATA$NUMERIC <-c(1:72)
colnames(DATA)[1]<-"RNAseq.fastq"
colnames(DATA)[2]<-"sample_Mirko"
DATA = merge(DATA,sample_desc, merge="RNAseq.fastq", all.x=TRUE)
DATA$"rep" = substr(DATA$"RNAseq.fastq",7,7)
DATA$"Treat_pheno" =paste(DATA$"treatment",DATA$"parental_phenotype",sep="_")
minidata<-as.data.frame(cbind(DATA$RNAseq.fastq,DATA$treatment,DATA$parental_phenotype))
colnames(minidata)<-c("sample","treatment","parental_phenotype")
phdata1<-merge(phdata,minidata, merge="sample", all.x=TRUE)
phdata1 <- phdata1 %>% mutate(treatment=as.factor(treatment),
parental_phenotype=as.factor(parental_phenotype),
md5=tools::md5sum(file.path(datadir,fname)))
head(phdata1)
phdata1$treatment[54] <- "control"
phdata1$parental_phenotype[54]<-"tolerant"
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design= ~ 1 + parental_phenotype +treatment + treatment:parental_phenotype)
phdata1$treatment <- relevel(phdata1$treatment, "control")
#make dds object watch out for full rank model matrix
dds<-DESeqDataSetFromHTSeqCount(sampleTable=phdata1,directory=datadir,design= ~ 1 + parental_phenotype +treatment + treatment:parental_phenotype)
colData(dds)
resultsNames(dds)
dds@design
dim(counts(dds))
head(counts(dds),3)
dds<- estimateSizeFactors(dds)
sizeFactors(dds)
#limit the size factors
round(sizeFactors(dds),3)
head(counts(dds),3)
head(counts(dds,normalize=TRUE),3)
dds<-estimateDispersions(dds)
dds<-DESeq(dds)
#ddsDE_tol_new<-DESeq(dds_tol)
resultsNames(dds)
# get the model matrix
mod_mat <- model.matrix(design(dds), colData(dds))
View(mod_mat)
# treatment:parental_phenotype
# Define coefficient vectors for each condition
control_tolerant <- colMeans(mod_mat[dds$treatment == "control" & dds$parental_phenotype == "tolerant", ])
control_sensitive <- colMeans(mod_mat[dds$treatment == "control" & dds$parental_phenotype == "sensitive", ])
trans_tolerant <- colMeans(mod_mat[dds$treatment == "transgenerational" & dds$parental_phenotype == "tolerant", ])
trans_sensitive <- colMeans(mod_mat[dds$treatment == "transgenerational" & dds$parental_phenotype == "sensitive", ])
all_tolerant <- colMeans(mod_mat[dds$parental_phenotype == "tolerant"])
all_tolerant <- colMeans(mod_mat[dds$parental_phenotype == "tolerant"],)
all_tolerant <- colMeans(mod_mat[ dds$parental_phenotype == "tolerant", ])
rm(list=ls())
